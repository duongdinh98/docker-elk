version: '3.2'

services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
  
  # logspout:
  #   build:
  #     context: extensions/logspout
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   environment:
  #     ROUTE_URIS: logstash://logstash:5000
  #     LOGSTASH_TAGS: docker-elk
  #   networks:
  #     - elk
  #   depends_on:
  #     - logstash
  #   restart: on-failure

  filebeat:
    build:
      context: extensions/filebeat
      args:
        ELK_VERSION: $ELK_VERSION
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./extensions/filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /home/duongdinh/docker-elk/natours/logs:/var/mylogs/
    command: ["-e", "-d", "publish,logstash", "--strict.perms=false"]
    networks:
      - elk
    depends_on:
      - logstash
    restart: unless-stopped

  # metricbeat:
  #   build:
  #     context: extensions/metricbeat
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   # Run as 'root' instead of 'metricbeat' (uid 1000) to allow reading
  #   # 'docker.sock' and the host's filesystem.
  #   user: root
  #   command:
  #       # Log to stderr.
  #     - -e
  #       # Disable config file permissions checks. Allows mounting
  #       # 'config/metricbeat.yml' even if it's not owned by root.
  #       # see: https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
  #     - --strict.perms=false
  #       # Mount point of the hostâ€™s filesystem. Required to monitor the host
  #       # from within a container.
  #     - --system.hostfs=/hostfs
  #   volumes:
  #     - type: bind
  #       source: ./extensions/metricbeat/config/metricbeat.yml
  #       target: /usr/share/metricbeat/metricbeat.yml
  #       read_only: true
  #     - type: bind
  #       source: /
  #       target: /hostfs
  #       read_only: true
  #     - type: bind
  #       source: /sys/fs/cgroup
  #       target: /hostfs/sys/fs/cgroup
  #       read_only: true
  #     - type: bind
  #       source: /proc
  #       target: /hostfs/proc
  #       read_only: true
  #     - type: bind
  #       source: /var/run/docker.sock
  #       target: /var/run/docker.sock
  #       read_only: true
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
